/// Generated By XFlutter Cli.
///
/// more info: https://xflutter-cli.aghiadodeh.com
import 'package:dio/dio.dart';
import 'dart:async';
import 'base_repository.dart';
import 'package:xflutter_cli_test_application/models/models.dart';
import 'package:xflutter_cli_test_application/utilities/di/di.dart';
import 'package:xflutter_cli_test_application/network/rest_clients/user_rest_client/user_rest_client.dart';

class UserRepository extends BaseRepository {
  late final restClient = UserRestClient(findInstance<Dio>());
  
  Future<BaseResponse<User>> create(User data) {
    final cancelToken = CancelToken();
    return getResponse(
      () => restClient.create(
        data: data.toJson(), 
        cancelToken: cancelToken,
      ),
      cancelToken: cancelToken,
    );
  }
  
  Future<BaseResponse<User>> update(String id, User data) {
    final cancelToken = CancelToken();
    return getResponse(
      () => restClient.update(
        id: id, 
        data: data.toJson(), 
        cancelToken: cancelToken,
      ),
      cancelToken: cancelToken,
    );
  }

  Future<BaseResponse<ListResponse<User>>> findAll(int page, {String? query}) {
    final cancelToken = CancelToken();
    return getResponse(
      () => restClient.findAll(page: page, query: query, cancelToken: cancelToken),
      cancelToken: cancelToken,
    );
  }

  Future<BaseResponse<User>> findOne(String id) {
    final cancelToken = CancelToken();
    return getResponse(
      () => restClient.findOne(
        id: id, 
        cancelToken: cancelToken,
      ),
      cancelToken: cancelToken,
    );
  }

  Future<BaseResponse<dynamic>> delete(String id) {
    final cancelToken = CancelToken();
    return getResponse(
      () => restClient.delete(
        id: id, 
        cancelToken: cancelToken,
      ),
      cancelToken: cancelToken,
    );
  }
}