// Generated By XFlutter Cli.
//
// more info: https://xflutter-cli.com
import 'package:dio/dio.dart';
import 'package:retrofit/retrofit.dart';
import 'package:injectable/injectable.dart';
import 'package:xflutter_cli_test_application/data/models/responses/base_response/base_response.dart';
import 'package:xflutter_cli_test_application/data/models/responses/list_response/list_response.dart';
import 'package:xflutter_cli_test_application/data/models/entities/product/product.dart';
part 'products_remote_data_source.g.dart';

@LazySingleton(scope: 'products')
@RestApi()
abstract class ProductsRemoteDataSource {
  @factoryMethod
  factory ProductsRemoteDataSource(Dio dio) = _ProductsRemoteDataSource;

  @POST('/product')
  Future<BaseResponse<Product>> create({
    @Body() required Map<String, dynamic> data,
    @CancelRequest() CancelToken? cancelToken,
  });

  @PUT('/product/{id}')
  Future<BaseResponse<Product>> update({
    @Path('id') required int? id,
    @Body() required Map<String, dynamic> data,
    @CancelRequest() CancelToken? cancelToken,
  });

  @GET('/product')
  Future<BaseResponse<ListResponse<Product>>> findAll({
    @Query('page') required int page,
    @Query('per_page') required int perPage,
    @CancelRequest() CancelToken? cancelToken,
  });

  @GET('/product/{id}')
  Future<BaseResponse<Product>> findOne({
    @Path('id') required int? id,
    @CancelRequest() CancelToken? cancelToken,
  });

  @DELETE('/product/{id}')
  Future<BaseResponse<dynamic>> delete({
    @Path('id') required int? id,
    @CancelRequest() CancelToken? cancelToken,
  });
}
