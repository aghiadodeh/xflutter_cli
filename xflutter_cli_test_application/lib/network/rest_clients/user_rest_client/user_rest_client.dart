/// Generated By XFlutter Cli.
///
/// more info: https://xflutter-cli.aghiadodeh.com
import 'package:dio/dio.dart';
import 'package:retrofit/retrofit.dart';
import 'package:xflutter_cli_test_application/models/models.dart';
import 'package:xflutter_cli_test_application/environment/environment.dart';

part 'user_rest_client.g.dart';
  
@RestApi()
abstract class UserRestClient {
  factory UserRestClient(Dio dio) = _UserRestClient;

  @POST("/user")
  Future<BaseResponse<User>> create({
    @Body() required Map<String, dynamic> data,
    @CancelRequest() CancelToken? cancelToken,
  });

  @PUT("/user/{id}")
  Future<BaseResponse<User>> update({
    @Path("id") required String id,
    @Body() required Map<String, dynamic> data,
    @CancelRequest() CancelToken? cancelToken,
  });

  @GET("/user")
  Future<BaseResponse<ListResponse<User>>> findAll({
    @Query("page") required int page,
    @Query("per_page") int perPage = Environment.perPage,
    @Query("search") String? query,
    @CancelRequest() CancelToken? cancelToken,
  });

  @GET("/user/{id}")
  Future<BaseResponse<User>> findOne({
    @Path("id") required String id,
    @CancelRequest() CancelToken? cancelToken,
  });

  @DELETE("/user/{id}")
  Future<BaseResponse<dynamic>> delete({
    @Path("id") required String id,
    @CancelRequest() CancelToken? cancelToken,
  });
}