// Generated By XFlutter Cli.
//
// more info: https://xflutter-cli.com
import 'package:objectbox/objectbox.dart';
import 'package:products/src/data/models/entities/product/product.dart';
import 'package:products/src/data/models/local/dimensions/local_dimensions.dart';
import 'package:products/src/data/models/local/review/local_review.dart';
import 'package:products/src/data/models/local/meta/local_meta.dart';

@Entity()
class LocalProduct {
  @Id()
  int id = 0;
  @Unique(onConflict: ConflictStrategy.replace)
  int? productId;
  String? title;
  String? description;
  String? category;
  double? price;
  double? discountPercentage;
  double? rating;
  int? stock;
  List<String>? tags;
  String? brand;
  String? sku;
  int? weight;
  final toOneDimensions = ToOne<LocalDimensions>();
  String? warrantyInformation;
  String? shippingInformation;
  String? availabilityStatus;
  final toManyReviews = ToMany<LocalReview>();
  String? returnPolicy;
  int? minimumOrderQuantity;
  final toOneMeta = ToOne<LocalMeta>();
  List<String>? images;
  String? thumbnail;
  LocalDimensions? dimensions;
  List<LocalReview>? reviews;
  LocalMeta? meta;

  LocalProduct({
    this.id = 0,
    this.productId,
    this.title,
    this.description,
    this.category,
    this.price,
    this.discountPercentage,
    this.rating,
    this.stock,
    this.tags,
    this.brand,
    this.sku,
    this.weight,
    this.warrantyInformation,
    this.shippingInformation,
    this.availabilityStatus,
    this.returnPolicy,
    this.minimumOrderQuantity,
    this.images,
    this.thumbnail,
  });

  /// convert [Product] to [LocalProduct]
  factory LocalProduct.fromEntity(Product product) {
    final item = LocalProduct(
      productId: product.id,
      title: product.title,
      description: product.description,
      category: product.category,
      price: product.price?.toDouble(),
      discountPercentage: product.discountPercentage?.toDouble(),
      rating: product.rating?.toDouble(),
      stock: product.stock,
      tags: product.tags,
      brand: product.brand,
      sku: product.sku,
      weight: product.weight,
      warrantyInformation: product.warrantyInformation,
      shippingInformation: product.shippingInformation,
      availabilityStatus: product.availabilityStatus,
      returnPolicy: product.returnPolicy,
      minimumOrderQuantity: product.minimumOrderQuantity,
      images: product.images,
      thumbnail: product.thumbnail,
    );

    if (product.dimensions != null) {
      item.toOneDimensions.target = LocalDimensions.fromEntity(product.dimensions!);
    }
    if (product.meta != null) {
      item.toOneMeta.target = LocalMeta.fromEntity(product.meta!);
    }

    if (product.reviews != null) {
      item.toManyReviews.addAll(product.reviews?.map((e) => LocalReview.fromEntity(e)) ?? []);
    }

    return item;
  }

  /// convert [LocalProduct] to [Product]
  Product fromLocal() => Product(
        id: productId,
        title: title,
        description: description,
        category: category,
        price: price,
        discountPercentage: discountPercentage,
        rating: rating,
        stock: stock,
        tags: tags,
        brand: brand,
        sku: sku,
        weight: weight,
        warrantyInformation: warrantyInformation,
        shippingInformation: shippingInformation,
        availabilityStatus: availabilityStatus,
        returnPolicy: returnPolicy,
        minimumOrderQuantity: minimumOrderQuantity,
        images: images,
        thumbnail: thumbnail,
        dimensions: toOneDimensions.target?.fromLocal(),
        meta: toOneMeta.target?.fromLocal(),
        reviews: toManyReviews.map((e) => e.fromLocal()).toList(),
      );
}
