// Generated By XFlutter Cli.
//
// more info: https://xflutter-cli.com
import 'package:flutter/material.dart';
import 'package:flutterx_live_data/flutterx_live_data.dart';
import 'package:injectable/injectable.dart';
import 'package:shared_preferences/shared_preferences.dart';
import 'theme.dart';
import 'dark_theme.dart';
import 'package:core/src/events/event_bus.dart';
import 'package:core/src/extensions/di_extension.dart';

@lazySingleton
class ThemeNotifier {
  final _themeMode = MutableLiveData(value: ThemeMode.light);
  LiveData<ThemeMode> get themeMode => _themeMode;

  ThemeData get theme => themeMode.value == ThemeMode.dark ? darkTheme : lightTheme;

  SharedPreferences get _sharedPreferences => getIt<SharedPreferences>();

  ThemeNotifier() {
    initializeThemeMode();
  }

  /// check last saved [ThemeMode] from localStorage
  void initializeThemeMode() {
    final darkMode = _sharedPreferences.getBool('dark_theme') ?? false;
    final themeMode = darkMode ? ThemeMode.dark : ThemeMode.light;
    if (themeMode != this.themeMode.value) {
      _themeMode.postValue(themeMode);
    }
  }

  /// change [ThemeMode]
  Future<void> changeThemeMode(ThemeMode mode) async {
    await _sharedPreferences.setBool('dark_theme', mode == ThemeMode.dark);
    _themeMode.postValue(mode);
    eventBus.fire(const ThemeChangedEvent());
  }
}
