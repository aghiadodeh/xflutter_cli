// Generated By XFlutter Cli.
//
// more info: https://xflutter-cli.com
import 'package:customer_app/modules/authentication/data_source/repositories/authentication_repository.dart';
import 'package:customer_app/common/models/models.dart';
import 'package:easy_localization/easy_localization.dart';
import 'package:core/core.dart';
import 'verify_pin_code_params.dart';

class VerifyPinCodeViewModel extends BaseViewModel {
  late final params = VerifyPinCodeParams();
  late final eventEmitter = EventEmitter<dynamic>();
  late final authenticationRepository = AuthenticationRepository();

  @override
  void onInit() {
    // called immediately after the widget is allocated in memory.
    super.onInit();
  }

  @override
  void onDispose() {
    // called immediately before the widget is disposed
    eventEmitter.dispose();
    authenticationRepository.dispose();
    super.onDispose();
  }

  /// update [VerifyPinCodeParams.code] value, check if [code] length == 4 -> submit the code
  void onPinCodeChanged(String code) {
    params.code.postValue(code);
    if (code.length == 4) submitVerificationCode();
  }

  /// send request to re-send the verification code
  void requestVerificationCode() {
    callHttpRequest(
      () => authenticationRepository.resendVerificationCode(
        GetVerificationCodeRequest(email: params.email),
      ),
      loading: baseParams.loading,
      callback: (result, success) {
        if (result != null && success) {
          showUiMessage(
              uiMessage: UiMessage(
            message: 'code_resent'.tr(),
            state: UiMessageState.success,
          ));
        }
      },
    );
  }

  /// submit verification code
  void submitVerificationCode() {
    eventBus.fire(const SoftKeyboardEvent());
    callHttpRequest(
      () => authenticationRepository.verifyPinCode(
        VerifyCodeRequest(
          email: params.email,
          verificationCode: params.code.value,
        ),
      ),
      loading: baseParams.loading,
      callback: (result, success) {
        if (result != null && success) {
          eventEmitter.emitValue(true);
        }
      },
    );
  }
}
