// Generated By XFlutter Cli.
//
// more info: https://xflutter-cli.com
import 'package:flutter/material.dart';
import 'package:reactive_forms/reactive_forms.dart';
import 'package:easy_localization/easy_localization.dart';
import 'package:core/core.dart';
import '../viewmodels/change_password_viewmodel.dart';

class ChangePasswordForm extends StatelessWidget {
  const ChangePasswordForm({super.key});

  @override
  Widget build(BuildContext context) {
    return InstanceBuilder<ChangePasswordViewModel>(
      builder: (viewModel) => ReactiveForm(
        formGroup: viewModel.params.changePasswordForm,
        child: Column(
          mainAxisAlignment: MainAxisAlignment.spaceBetween,
          children: [
            Column(
              children: [
                CustomizedReactiveFormField(
                  formControlName: 'old_password',
                  labelText: 'old_password'.tr(),
                  keyboardType: TextInputType.text,
                  textInputAction: TextInputAction.next,
                  obscureText: true,
                  onSubmitted: (control) => viewModel.params.changePasswordForm.focus('new_password'),
                ),
                const SizedBox(height: formSpacing),
                CustomizedReactiveFormField(
                  formControlName: 'new_password',
                  labelText: 'new_password'.tr(),
                  keyboardType: TextInputType.text,
                  textInputAction: TextInputAction.next,
                  obscureText: true,
                  onSubmitted: (control) => viewModel.params.changePasswordForm.focus('confirm_password'),
                ),
                const SizedBox(height: formSpacing),
                CustomizedReactiveFormField(
                  formControlName: 'confirm_password',
                  labelText: 'confirm_password'.tr(),
                  keyboardType: TextInputType.text,
                  textInputAction: TextInputAction.done,
                  obscureText: true,
                  onSubmitted: (control) {},
                ),
                const SizedBox(height: formSpacing),
              ],
            ),
            ReactiveFormConsumer(
              builder: (context, form, child) => SizedBox(
                width: double.infinity,
                child: CustomizedButton(
                  child: Text('next'.tr()),
                  callback: () {
                    if (form.valid) {
                      viewModel.submit();
                    } else {
                      form.markAllAsTouched();
                    }
                  },
                ),
              ),
            ),
          ],
        ),
      ),
    );
  }
}
