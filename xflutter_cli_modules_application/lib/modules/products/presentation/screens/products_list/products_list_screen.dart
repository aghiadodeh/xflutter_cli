// Generated By XFlutter Cli.
//
// more info: https://xflutter-cli.com
import 'package:xflutter_cli_modules_application/modules/products/data/models/entities/product/product.dart';
import 'package:xflutter_cli_modules_application/common/router/app_router.dart';
import 'package:flutter/material.dart';
import 'package:flutterx_live_data/flutterx_live_data.dart';
import './viewmodels/products_list_viewmodel.dart';
import 'package:auto_route/auto_route.dart';
import 'package:responsive_builder/responsive_builder.dart';
import 'mobile/products_list_mobile_screen.dart';
import 'package:xflutter_cli_modules_application/common/data/models/di/di_scope/di_scope.dart';
import 'package:xflutter_cli_modules_application/common/ui/widgets/loaders/live_data_loader.dart';
import 'package:xflutter_cli_modules_application/common/ui/widgets/instance/lifecycle_owner.dart';
import 'package:xflutter_cli_modules_application/core/extensions/di_extension.dart';
import 'package:xflutter_cli_modules_application/common/di/app_injectable.config.dart';
import 'package:xflutter_cli_modules_application/common/ui/widgets/core/base_scaffold.dart';

@RoutePage(name: 'productsList')
class ProductsListScreen extends StatefulWidget {
  const ProductsListScreen({super.key});

  @override
  State<ProductsListScreen> createState() => _ProductsListScreenState();
}

class _ProductsListScreenState extends State<ProductsListScreen>
    with LifecycleOwner<ProductsListScreen, ProductsListViewModel>, ObserverMixin {
  @override
  Widget build(BuildContext context) {
    return Stack(
      children: [
        // screen body
        BaseScaffold(
          floatingActionButton: FloatingActionButton(
            child: const Icon(Icons.add),
            onPressed: () async {
              // navigate to create-product screen
              final result = await appRouter.push(const CreateProduct());
              if (result is Product) {
                // add new product to list
                viewModel.insertProduct(result);
              }
            },
          ),
          builder: (context, theme) => SafeArea(
            child: ScreenTypeLayout.builder(
              mobile: (_) => const ProductsListMobileScreen(),
            ),
          ),
        ),

        // full-screen loader
        LiveDataFullScreenLoader(loading: viewModel.baseParams.loading),
      ],
    );
  }

  @override
  DiScope get diScope => DiScope(
        name: 'productsList',
        factory: getIt.initProductsListScope,
        dependencies: [
          DiScope(
            name: 'products',
            factory: getIt.initProductsScope,
          ),
          DiScope(
            name: 'productsPaging',
            factory: getIt.initProductsPagingScope,
          ),
        ],
      );
}
